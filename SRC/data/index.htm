<!DOCTYPE html>
<html>
<meta charset="utf-8" />

<head>
  <title>.json Settings</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
<h2>
  <span id=host_name></span> settings.json
</h2>
<div class="shell-wrap">
  <textarea id="myTextArea" class="shell-body" onkeyup="bnA.disabled=true; tStat.innerText='';"></textarea>
  <br>
  <button id="bnV" class="inline" onclick="prettyPrint();">Verify</button>
  <button id="bnA" class="inline" onclick="writeFile();">Apply</button>
  <button id="bnR" class="inline" onclick="readFile('/reboot'); textArea.value = ''">Reboot</button>
  <span id="tStat"></span>
</div>
</body>

<script src="140medley.min.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript">
  var xhr = j();
  var settingsFileName = "settings.json";
  var textArea, bnA, tStat;

  function readFile(fName, v=false) {
    console.log("GETing: " + fName);
    xhr.open("GET", fName);
    xhr.onreadystatechange = function() {
      if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status < 300) {
        textArea.value = xhr.responseText;
        if (v)
          prettyPrint();
      }
    }
    xhr.send();
  }

  function writeFile() {
    bnA.disabled = true;
    fName = settingsFileName;
    console.log("POSTing: " + fName);
    xhr.open("POST", fName);
    tStat.innerHTML = "<font color=#444444>applying ...</font>";
    xhr.onreadystatechange=function() {
      if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status < 300) {
        tStat.innerHTML = "<font color=#88FF88> done (" + xhr.statusText + ") </font>";
      }
    }
    xhr.send(textArea.value);
  }

  function init() {
    textArea = document.getElementById("myTextArea");
    bnA = document.getElementById("bnA");
    tStat = document.getElementById("tStat");
    bnA.disabled = true;

    // enable TAB input in textArea
    textArea.onkeydown = function(e) {
      if (e.keyCode == 9 || e.which == 9) {
          e.preventDefault();
          var s = this.selectionStart;
          this.value = this.value.substring(0, this.selectionStart) + "    " + this.value.substring(this.selectionEnd);
          this.selectionEnd = s + 4;
      }
    }

    readFile(settingsFileName, true);
  }

  function prettyPrint() {
      s = textArea.value;
      try {
        var obj = JSON.parse(s);
        textArea.value = JSON.stringify(obj, undefined, 4);
        bnA.disabled = false;
        tStat.innerHTML = "<font color=#44FF44>verified</font>";
      } catch(e) {
        bnA.disabled = true;
        var arr = e.message.match(/\d+/g);
        var row = parseInt(arr[0]);
        var col = parseInt(arr[1]);
        console.log('.json error at row / col: ', row, col);

        arr = textArea.value.split('\n');
        var startChar = 0;
        for (var i=0; i < row - 1; i++)
          startChar += arr[i].length + 1;
        startChar += col;

        textArea.focus();
        textArea.selectionStart = startChar;
        textArea.selectionEnd = startChar;
        tStat.innerHTML = "<font color=#FF4444>" + e.message + "</font>";
      }
  }

  window.onload = function() {
    window.setTimeout(init, 50);
  }
</script>
